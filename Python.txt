from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.keys import Keys
import time

# Configuración
chrome_path = r"C:\Temp\chromedriver\chromedriver.exe"  # ¡Asegúrate de que el archivo EXE existe aquí!
url = "http://180.176.105.244/"
usuario = "C356882"
password = "derekNatalie72"

try:
    # Iniciar Chrome
    service = Service(chrome_path)
    driver = webdriver.Chrome(service=service)
    driver.maximize_window()
    driver.get(url)

    # 1. Click en botón "SDK-CAU Reportes"
    btn_reportes = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(@class, 'btn-primary') and contains(., 'SDK-CAU Reportes')]"))
    )
    btn_reportes.click()

    # 2. Ingresar credenciales
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.ID, "usr"))
    
    input_usuario = driver.find_element(By.ID, "usr")
    input_password = driver.find_element(By.ID, "pass")

    input_usuario.send_keys(usuario)
    input_password.send_keys(password + Keys.RETURN)

    # 3. Esperar preloader
    WebDriverWait(driver, 30).until(
        EC.presence_of_element_located((By.XPATH, "//div[@id='preloader' and contains(@class, 'preloader-close')]"))
    
    # 4. Click en "Actualizar Data"
    link_actualizar = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//a[@href='../apps/dataupdate.html']")))
    link_actualizar.click()

    # 5. Click en el ícono de bi-bandaid-fill
    icono_bandaid = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//i[contains(@class, 'bi-bandaid-fill')]")))
    icono_bandaid.click()

    print("Proceso completado exitosamente")
    time.sleep(5)

except Exception as e:
    print(f"Error: {str(e)}")
    if 'driver' in locals():  # Si el driver se creó pero hubo un error después
        driver.save_screenshot("error.png")  # Guarda captura del error
finally:
    if 'driver' in locals():
        driver.quit()
