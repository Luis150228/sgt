/* Define the animation */
@keyframes fadeOut {
  from {
    opacity: 1;
    height: 100%;
  }
  to {
    opacity: 0;
    height: 0;
    visibility: hidden;
  }
}

.fade-out {
  animation: fadeOut 0.5s ease forwards;
  transition: height 0.5s ease, opacity 0.5s ease;
}

document.getElementById('removeRow').addEventListener('click', () => {
  const row = document.getElementById('row2');

  // Añadimos la clase que dispara la animación
  row.classList.add('fade-out');

  // Una vez que la animación termina, removemos el elemento del DOM
  row.addEventListener('animationend', () => {
    row.remove();
  });
});




const data = [
    // Tus datos aquí...
];

const groupedByAdf = {};

// Recorremos cada objeto del arreglo
for (const item of data) {
    const adf = item.adf;

    // Si el ADF no existe como clave, lo inicializamos como un array vacío
    if (!groupedByAdf[adf]) {
        groupedByAdf[adf] = [];
    }

    // Añadimos el item al array correspondiente al ADF
    groupedByAdf[adf].push(item);
}

// Función para filtrar por un ADF específico
function filterByAdf(adf) {
    if (groupedByAdf[adf]) {
        return groupedByAdf[adf]; // Devuelve los elementos agrupados por el ADF
    } else {
        return []; // Si no se encuentra el ADF, devuelve un array vacío
    }
}

// Ejemplo de uso: Filtrar por un ADF específico
const adfToFilter = "1234567890";
const filteredItems = filterByAdf(adfToFilter);

console.log(filteredItems);
