del siguiente codigo quiero que en lugar de guardar el archivo en una ubicacion determinada se requiere que se descarge y el usuario guarde el archivo donde quiera 

// /*
        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();
        $sheet->setTitle('Data');

        // Obtener las claves del primer registro para generar las columnas
        $firstRecord = reset($data);
        $columns = array_keys($firstRecord);

        // Escribir los encabezados de las columnas en la primera fila de la hoja
        $columnIndex = 1;
        foreach ($columns as $column) {
            $cellCoordinate = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($columnIndex) . '1';
            $sheet->setCellValue($cellCoordinate, $column);
            $columnIndex++;
        }

        // Escribir los datos en la hoja
        $rowIndex = 2; // Comenzar a partir de la segunda fila, ya que la primera fila contiene los encabezados
        foreach ($data as $record) {
            $columnIndex = 1;
            foreach ($record as $value) {
                $cellCoordinate = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex($columnIndex) . $rowIndex;
                $sheet->setCellValue($cellCoordinate, $value);

                $statusCell = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::stringFromColumnIndex(array_search('Estatus', $columns) + 1) . $rowIndex;

                // Aplicar formato a toda la fila cuando el campo "Estatus" sea "VENCIDO" (Color de fuente rojo)
                if ($sheet->getCell($statusCell)->getValue() === 'VENCIDO') {
                    $sheet->getStyle($cellCoordinate)->getFont()->getColor()->setRGB('FF0000');
                }

                $columnIndex++;
            }
            $rowIndex++;
        }


        $writer = new Xlsx($spreadsheet);
        $writer->save('../xlsx/' . $namefile . '.xlsx');

        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="' . $namefile . '.xlsx"');
        header('Cache-Control: max-age=0');

        $writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Xlsx');
        $writer->save('php://output');
/**************************************************************************************************************************************************/
// ... (código anterior)

// Guardar el archivo en una ubicación determinada en el servidor
$filepath = '../xlsx/' . $namefile . '.xlsx';
$writer->save($filepath);

// Verificar si el archivo se ha generado correctamente
if (file_exists($filepath)) {
    $fileCreationTime = filectime($filepath);

    // Si el valor de filectime es válido (mayor que cero), consideramos que el archivo se ha generado correctamente
    if ($fileCreationTime > 0) {
        // Convertir el timestamp a formato de fecha y hora
        $formattedCreationTime = date('Y-m-d H:i:s', $fileCreationTime);

        // Construir la respuesta JSON de éxito
        $response = array(
            'status' => 'success',
            'message' => 'El archivo se ha generado y guardado correctamente.',
            'file_url' => $filepath,
            'creation_time' => $formattedCreationTime
        );
    } else {
        // Construir la respuesta JSON de error
        $response = array(
            'status' => 'error',
            'message' => 'Hubo un problema al generar y guardar el archivo.'
        );
    }
} else {
    // Construir la respuesta JSON de error si el archivo no existe
    $response = array(
        'status' => 'error',
        'message' => 'El archivo no se pudo guardar en la ubicación especificada.'
    );
}

// Enviar la respuesta JSON
header('Content-Type: application/json');
echo json_encode($response);

// Eliminar el archivo después de enviar la respuesta (opcional)
if (file_exists($filepath)) {
    unlink($filepath);
}
exit;
