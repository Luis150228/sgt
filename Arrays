const openFile = async (tipo, archivo, tiempo, print, alert, loader, btnalt) => {
  if (archivo.type !== 'text/csv') {
    console.log('Archivo inv치lido');
    throw new Error('Archivo inv치lido');
  } else {
    const lector = new FileReader();
    
    const contenido = await new Promise((resolve, reject) => {
      lector.onload = (e) => {
        resolve(e.target.result);
      };
      lector.onerror = (e) => {
        reject(e);
      };
      lector.readAsText(archivo, 'windows-1252');
    });

    try {
      const result = await ajustCSV(tipo, contenido, tiempo, print, alert, loader, btnalt);
      return result;
    } catch (error) {
      throw error;
    }
  }
};


puedes apoyarme en ajustar esta funcion para convertirla en su version de async await en lugar de usar promesas

const openFile = (tipo, archivo, tiempo, print, alert, loader, btnalt) => {
  return new Promise((resolve, reject) => {
    if (archivo.type != 'text/csv') {
      console.log('Archivo inv치lido');
      reject('Archivo inv치lido');
    } else {
      const lector = new FileReader();
      lector.onload = (e) => {
        const contenido = e.target.result;
        ajustCSV(tipo, contenido, tiempo, print, alert, loader, btnalt)
          .then((result) => resolve(result))
          .catch((error) => reject(error));
      };
      lector.readAsText(archivo, 'windows-1252');
    }
  });
};
