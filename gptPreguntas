estoy abrindo de forma correcta el archivo pero en las cadenas de texto esta generando caracteres especiales como 'CASTA�ON HERNANDEZ (Notas de trabajo) Buen d�a ' creo que es por que el archivo de origen es un ANSI y quiero que respete las palapas con ñ o vocales con acentos, adicional quiero que se muestre el resultado en un json en lugar de una cadena de texto

<?php
$archivo_csv = '../dataUpdate/sc_task.csv';
// $ruta = realpath($archivo_csv);

// Abrir el archivo CSV en modo lectura
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Leer los datos línea por línea y procesarlos
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Quuitar comillas dobles de cada elemento del array $data
        $data = array_map(function ($value) {
            return str_replace('"', '', $value);
        }, $data);

        // Realizar ajustes en los datos
        $task_effective_number = $data[0];
        $number = $data[1];
        $request_item = $data[2];
        $opened_at = $data[3];
        $work_end = $data[4];
        $closed_at = $data[5];
        $sys_created_by = $data[6];
        $assignment_group = $data[7];
        $assigned_to = $data[8];
        $state = $data[9];
        $short_description = $data[10];
        $rcat_item = $data[11];
        $description = $data[12];
        $opened_by = $data[13];
        $comments_and_work_notes = $data[14];
        $sys_updated_by = $data[15];
        $sys_updated_on = $data[16];
        $location = $data[17];
        $u_zone = $data[18];
        $sys_mod_count = $data[19];

        // Aquí puedes realizar cualquier acción con los datos, por ejemplo, mostrarlos en pantalla
        echo "ticket: $task_effective_number, obsr: $comments_and_work_notes, fecha: $sys_updated_by<br>";
    }

    fclose($handle);
} else {
    echo "Error al abrir el archivo CSV";
}
/////////////////////////////
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Especificar la codificación del archivo como ISO-8859-1
    stream_filter_append($handle, 'convert.iconv.ISO-8859-1/UTF-8');

    // Leer los datos línea por línea y procesarlos
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Resto del código...
    }

    fclose($handle);
} else {
    echo "Error al abrir el archivo CSV";
}
///////////////////////////////
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Especificar la codificación del archivo como ISO-8859-1
    stream_filter_append($handle, 'convert.iconv.ISO-8859-1/UTF-8');

    // Leer los datos línea por línea y procesarlos
    $result = array();
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Resto del código...

        // Agregar los datos al array
        $result[] = array(
            'ticket' => $task_effective_number,
            'obsr' => $comments_and_work_notes,
            'fecha' => $sys_updated_by
        );
    }

    // Convertir el array a JSON
    $json_result = json_encode($result);

    // Mostrar el resultado en JSON
    echo $json_result;

    fclose($handle);
} else {
    echo "Error al abrir el archivo CSV";
}
///////////////////////////
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Especificar la codificación del archivo como ISO-8859-1
    stream_filter_append($handle, 'convert.iconv.ISO-8859-1/UTF-8');

    // Leer los datos línea por línea y procesarlos
    $result = array();
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Resto del código...

        // Quitar los caracteres específicos (', ", y _)
        $comments_and_work_notes = str_replace(array("'", '"', '_'), '', $comments_and_work_notes);

        // Agregar los datos al array
        $result[] = array(
            'ticket' => $task_effective_number,
            'obsr' => $comments_and_work_notes,
            'fecha' => $sys_updated_by
        );
    }

    // Convertir el array a JSON
    $json_result = json_encode($result);

    // Mostrar el resultado en JSON
    echo $json_result;

    fclose($handle);
} else {
    echo "Error al abrir el archivo CSV";
}
//////////////////////////////////////////////////////////////////////////////////////
tengo el siguiente codigo y al abrir el archivo y procesarlo quiero que los resultados $data se guarden en un array por cada fila y cada fila almacenarla en un array que contenga todo el contenido del archivo y adicional al abirr el archivo quiero quitar la primer linea que trae los titulos.

<?php
$archivo_csv = '../dataUpdate/sc_task.csv';
// $ruta = realpath($archivo_csv);

// Abrir el archivo CSV en modo lectura
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Especificar la codificación del archivo como ISO-8859-1
    stream_filter_append($handle, 'convert.iconv.ISO-8859-1/UTF-8');
    // Leer los datos línea por línea y procesarlos

    $result = array();
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Quuitar comillas dobles de cada elemento del array $data

        $data = array_map(function ($value) {

            return str_replace('"', '', $value);
        }, $data);
    }

    fclose($handle);
} else {
    echo "Error al abrir el archivo CSV";
}

////////////////////////////
<?php
$archivo_csv = '../dataUpdate/sc_task.csv';

// Abrir el archivo CSV en modo lectura
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Especificar la codificación del archivo como ISO-8859-1
    stream_filter_append($handle, 'convert.iconv.ISO-8859-1/UTF-8');

    // Ignorar la primera línea que contiene los títulos
    fgetcsv($handle, 1000, ',');

    // Leer los datos línea por línea y procesarlos
    $result = array();
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Quitar comillas dobles de cada elemento del array $data
        $data = array_map(function ($value) {
            return str_replace('"', '', $value);
        }, $data);

        // Agregar la fila actual al array $result
        $result[] = $data;
    }

    fclose($handle);
    // Ahora, $result contiene todas las filas del archivo CSV en un array multidimensional
    // Cada fila es un array dentro de $result

    // Enviar $result por POST a otro archivo PHP en el servidor
    $url = 'http://tu_servidor/otro_archivo.php';
    $post_data = http_build_query(array('data' => $result));
    $options = array(
        'http' => array(
            'method' => 'POST',
            'header' => 'Content-Type: application/x-www-form-urlencoded',
            'content' => $post_data
        )
    );
    $context = stream_context_create($options);
    $result_from_server = file_get_contents($url, false, $context);

    // $result_from_server contiene la respuesta del otro archivo PHP en el servidor
    // Puedes hacer lo que desees con la respuesta
} else {
    echo "Error al abrir el archivo CSV";
}
?>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
<?php
$archivo_csv = '../dataUpdate/sc_task.csv';

// Obtener la fecha y hora actual en formato AAAA-MM-DD HH:MM:SS
$fecha_actual = date("Y-m-d H:i:s");

// Abrir el archivo CSV en modo lectura
if (($handle = fopen($archivo_csv, 'r')) !== false) {
    // Especificar la codificación del archivo como ISO-8859-1
    stream_filter_append($handle, 'convert.iconv.ISO-8859-1/UTF-8');

    // Ignorar la primera línea que contiene los títulos
    fgetcsv($handle, 1000, ',');

    // Leer los datos línea por línea y procesarlos
    $result = array();
    while (($data = fgetcsv($handle, 1000, ',')) !== false) {
        // Quitar comillas dobles de cada elemento del array $data
        $data = array_map(function ($value) {
            return str_replace('"', '', $value);
        }, $data);

        // Agregar la fila actual al array $result
        $result[] = $data;
    }

    fclose($handle);
    // Ahora, $result contiene todas las filas del archivo CSV en un array multidimensional
    // Cada fila es un array dentro de $result

    // Enviar $result por POST al archivo PHP en tu servidor
    $archivo_en_servidor = '/ruta/a/otro_archivo.php';
    $post_data = http_build_query(array('data' => $result));

    // Agregar el encabezado con la fecha y hora actual
    $headers = array(
        'Content-Type: application/x-www-form-urlencoded',
        'X-Date: ' . $fecha_actual
    );

    $options = array(
        'http' => array(
            'method' => 'POST',
            'header' => implode("\r\n", $headers),
            'content' => $post_data
        )
    );
    $context = stream_context_create($options);
    $result_from_server = file_get_contents($archivo_en_servidor, false, $context);

    // $result_from_server contiene la respuesta del archivo PHP en tu servidor
    // Puedes hacer lo que desees con la respuesta
} else {
    echo "Error al abrir el archivo CSV";
}
?>
